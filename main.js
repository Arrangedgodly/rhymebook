!function(){"use strict";function e(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}class t{constructor(t){let{word:r,templateSelector:n,sectionSelector:s}=t;e(this,"_getTemplate",(()=>document.querySelector(this.template).content.querySelector(".rhyme").cloneNode(!0))),e(this,"generateRhyme",(()=>(this._element=this._getTemplate(),this._element.textContent=this.word,this._element.setAttribute("title",this.word),this._element))),e(this,"addRhyme",(e=>{this.section.append(e)})),this.word=r,this.template=n,this.section=document.querySelector(s)}}const r=new class{constructor(e){let{url:t}=e;this.url=t,this.max=150}setMax(e){this.max=e}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getRhyme(e,t){return fetch(`${this.url}?rel_rhy=${e}&topic=${t}&max=${this.max}`).then(this._checkResponse)}getSoundAlike(e,t){return fetch(`${this.url}?rel_nry=${e}&topic=${t}&max=${this.max}`).then(this._checkResponse)}getRelatedAdjectives(e,t){return fetch(`${this.url}?rel_jja=${e}&topic=${t}&max=${this.max}`).then(this._checkResponse)}getRelatedNouns(e,t){return fetch(`${this.url}?rel_jjb=${e}&topic=${t}&max=${this.max}`).then(this._checkResponse)}getRelatedWords(e,t){return fetch(`${this.url}?rel_trg=${e}&topic=${t}&max=${this.max}`).then(this._checkResponse)}getSynonyms(e,t){return fetch(`${this.url}?rel_syn=${e}&topic=${t}&max=${this.max}`).then(this._checkResponse)}getAntonyms(e,t){return fetch(`${this.url}?rel_ant=${e}&topic=${t}&max=${this.max}`).then(this._checkResponse)}getFrequentFollowers(e,t){return fetch(`${this.url}?rel_bga=${e}&topic=${t}&max=${this.max}`).then(this._checkResponse)}}({url:"https://api.datamuse.com/words"}),n=document.querySelector(".form-input-title"),s=document.querySelector(".form-input-body");function o(e){let{data:r,sectionSelector:n}=e;document.querySelector(n).innerHTML="",r.forEach((e=>{const r=new t({word:e.word,templateSelector:"#rhyme",sectionSelector:n});r.addRhyme(r.generateRhyme())}))}s.value="",s.addEventListener("keydown",(e=>{if(32===e.keyCode||13===e.keyCode){const e=s.value.split(" ").pop(),t=n.value;r.getRhyme(e,t).then((e=>{o({data:e,sectionSelector:".rhymes-def"})})),r.getSoundAlike(e,t).then((e=>{o({data:e,sectionSelector:".rhymes-sound"})})),r.getRelatedNouns(e,t).then((e=>{o({data:e,sectionSelector:".rhymes-rel-noun"})})),r.getRelatedAdjectives(e,t).then((e=>{o({data:e,sectionSelector:".rhymes-rel-adj"})})),r.getSynonyms(e,t).then((e=>{o({data:e,sectionSelector:".rhymes-syn"})})),r.getAntonyms(e,t).then((e=>{o({data:e,sectionSelector:".rhymes-ant"})})),r.getRelatedWords(e,t).then((e=>{o({data:e,sectionSelector:".rhymes-rel"})})),r.getFrequentFollowers(e,t).then((e=>{o({data:e,sectionSelector:".rhymes-follow"})}))}})),Array.from(document.querySelectorAll(".eye")).forEach((e=>{e.addEventListener("click",(()=>{e.closest(".rhymes-wrapper").classList.add("rhymes-hidden")}))}));const c=document.querySelector(".form-input-max"),h=document.querySelector(".form-label-max");h.textContent=`${c.value}`,c.oninput=function(){h.textContent=`${c.value}`,r.setMax(c.value)}}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,